function createProxy(t,e,r){return new Proxy(t,{set:(t,s,o)=>{try{r&&"function"==typeof r[s]?t[s]=r[s](t[s],o,t):t[s]=o}catch(t){return console.log(t),!1}return renderall(e),1}})}function renderall(t){for(const e of states[t].setStates)e({})}import{v1}from"uuid";import{useState,useRef}from"react";const states={};export default function useUgh(t={},e,r){if("object"==typeof e&&(r=e,e=null),e=e||v1(),!t&&e)throw new Error("bruh, u passed nothing, no state or label,smh");let s=useRef(null);const[o,n]=useState(t);if("object"==typeof t&&e){if(states[e])return states[e].proxy;const t=createProxy(o,e,r);return states[e]={proxy:t,setStates:new Set([n])},s.current=!0,t}if("string"==typeof t){if(!states[t])throw new Error("you are trying to access a labeled state thats not set yet>",t);return s.current?states[t].proxy:(s.current=!0,states[t].setStates.add(n),states[t].proxy)}}